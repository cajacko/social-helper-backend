-- MySQL Script generated by MySQL Workbench
-- Sun Jun 12 13:24:59 2016
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema socialhelper
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema socialhelper
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `socialhelper` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ;
USE `socialhelper` ;

-- -----------------------------------------------------
-- Table `socialhelper`.`objectTypes`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `socialhelper`.`objectTypes` (
  `objectTypesID` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '',
  `type` VARCHAR(45) NOT NULL COMMENT '',
  `dateAdded` DATETIME NOT NULL COMMENT '',
  `dateUpdated` DATETIME NOT NULL COMMENT '',
  PRIMARY KEY (`objectTypesID`)  COMMENT '',
  UNIQUE INDEX `objectTypesID_UNIQUE` (`objectTypesID` ASC)  COMMENT '',
  UNIQUE INDEX `type_UNIQUE` (`type` ASC)  COMMENT '')
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `socialhelper`.`objects`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `socialhelper`.`objects` (
  `objectID` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '',
  `UID` VARCHAR(45) NOT NULL COMMENT '',
  `objectTypeID` INT UNSIGNED NOT NULL COMMENT '',
  `dateAdded` DATETIME NOT NULL COMMENT '',
  `dateUpdated` DATETIME NOT NULL COMMENT '',
  PRIMARY KEY (`objectID`)  COMMENT '',
  UNIQUE INDEX `UID_UNIQUE` (`UID` ASC)  COMMENT '',
  UNIQUE INDEX `objectID_UNIQUE` (`objectID` ASC)  COMMENT '',
  INDEX `objectsObjectTypesID_idx` (`objectTypeID` ASC)  COMMENT '',
  CONSTRAINT `objectsObjectTypesID`
    FOREIGN KEY (`objectTypeID`)
    REFERENCES `socialhelper`.`objectTypes` (`objectTypesID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `socialhelper`.`objectMeta`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `socialhelper`.`objectMeta` (
  `objectMetaID` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '',
  `metaKey` VARCHAR(45) NOT NULL COMMENT '',
  `metaValue` VARCHAR(45) NULL COMMENT '',
  `objectID` INT UNSIGNED NOT NULL COMMENT '',
  `dateAdded` DATETIME NOT NULL COMMENT '',
  `dateUpdated` DATETIME NOT NULL COMMENT '',
  PRIMARY KEY (`objectMetaID`)  COMMENT '',
  UNIQUE INDEX `keyValueID` (`metaKey` ASC, `metaValue` ASC, `objectID` ASC)  COMMENT '',
  INDEX `fk_objectMeta_objects_idx` (`objectID` ASC)  COMMENT '',
  UNIQUE INDEX `objectMetaID_UNIQUE` (`objectMetaID` ASC)  COMMENT '',
  CONSTRAINT `objectMetaObjectID`
    FOREIGN KEY (`objectID`)
    REFERENCES `socialhelper`.`objects` (`objectID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `socialhelper`.`keywordTypes`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `socialhelper`.`keywordTypes` (
  `keywordTypesID` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '',
  `type` VARCHAR(45) NOT NULL COMMENT '',
  `dateAdded` DATETIME NOT NULL COMMENT '',
  `dateUpdated` DATETIME NOT NULL COMMENT '',
  PRIMARY KEY (`keywordTypesID`)  COMMENT '',
  UNIQUE INDEX `keywordTypesID_UNIQUE` (`keywordTypesID` ASC)  COMMENT '',
  UNIQUE INDEX `type_UNIQUE` (`type` ASC)  COMMENT '')
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `socialhelper`.`keywords`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `socialhelper`.`keywords` (
  `keywordID` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '',
  `keywordTypeID` INT UNSIGNED NOT NULL COMMENT '',
  `keyword` VARCHAR(45) NOT NULL COMMENT '',
  `dateAdded` DATETIME NOT NULL COMMENT '',
  `dateUpdated` DATETIME NOT NULL COMMENT '',
  PRIMARY KEY (`keywordID`)  COMMENT '',
  UNIQUE INDEX `keywordID_UNIQUE` (`keywordID` ASC)  COMMENT '',
  UNIQUE INDEX `keywordTypeIDkeyword` (`keywordTypeID` ASC, `keyword` ASC)  COMMENT '',
  CONSTRAINT `keywordsKeywordTypeID`
    FOREIGN KEY (`keywordTypeID`)
    REFERENCES `socialhelper`.`keywordTypes` (`keywordTypesID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `socialhelper`.`objectKeywords`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `socialhelper`.`objectKeywords` (
  `objectKeywordID` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '',
  `objectID` INT UNSIGNED NOT NULL COMMENT '',
  `keywordID` INT UNSIGNED NOT NULL COMMENT '',
  `dateAdded` DATETIME NOT NULL COMMENT '',
  `dateUpdated` DATETIME NOT NULL COMMENT '',
  PRIMARY KEY (`objectKeywordID`)  COMMENT '',
  UNIQUE INDEX `objectIDkeywordID` (`objectID` ASC, `keywordID` ASC)  COMMENT '',
  UNIQUE INDEX `objectKeywordID_UNIQUE` (`objectKeywordID` ASC)  COMMENT '',
  INDEX `objectKeywordsKeywordID_idx` (`keywordID` ASC)  COMMENT '',
  CONSTRAINT `objectKeywordsObjectID`
    FOREIGN KEY (`objectID`)
    REFERENCES `socialhelper`.`objects` (`objectID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `objectKeywordsKeywordID`
    FOREIGN KEY (`keywordID`)
    REFERENCES `socialhelper`.`keywords` (`keywordID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `socialhelper`.`metrics`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `socialhelper`.`metrics` (
  `metricID` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '',
  `type` VARCHAR(45) NOT NULL COMMENT '',
  `dateAdded` DATETIME NOT NULL COMMENT '',
  `dateUpdated` DATETIME NOT NULL COMMENT '',
  PRIMARY KEY (`metricID`)  COMMENT '',
  UNIQUE INDEX `metricID_UNIQUE` (`metricID` ASC)  COMMENT '',
  UNIQUE INDEX `type_UNIQUE` (`type` ASC)  COMMENT '')
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `socialhelper`.`objectMetrics`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `socialhelper`.`objectMetrics` (
  `objectMetricID` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '',
  `objectID` INT UNSIGNED NOT NULL COMMENT '',
  `metricID` INT UNSIGNED NOT NULL COMMENT '',
  `value` BIGINT(64) UNSIGNED NOT NULL COMMENT '',
  `dateAdded` DATETIME NOT NULL COMMENT '',
  `dateUpdated` DATETIME NOT NULL COMMENT '',
  PRIMARY KEY (`objectMetricID`)  COMMENT '',
  UNIQUE INDEX `objectIDmetricID` (`objectID` ASC, `metricID` ASC)  COMMENT '',
  UNIQUE INDEX `objectMetricID_UNIQUE` (`objectMetricID` ASC)  COMMENT '',
  INDEX `metricsMetricID_idx` (`metricID` ASC)  COMMENT '',
  CONSTRAINT `objectMetricsObjectID`
    FOREIGN KEY (`objectID`)
    REFERENCES `socialhelper`.`objects` (`objectID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `metricsMetricID`
    FOREIGN KEY (`metricID`)
    REFERENCES `socialhelper`.`metrics` (`metricID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `socialhelper`.`accountTypes`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `socialhelper`.`accountTypes` (
  `accountTypeID` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '',
  `type` VARCHAR(45) NOT NULL COMMENT '',
  `dateAdded` DATETIME NOT NULL COMMENT '',
  `dateUpdated` DATETIME NOT NULL COMMENT '',
  PRIMARY KEY (`accountTypeID`)  COMMENT '',
  UNIQUE INDEX `accountTypeID_UNIQUE` (`accountTypeID` ASC)  COMMENT '',
  UNIQUE INDEX `type_UNIQUE` (`type` ASC)  COMMENT '')
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `socialhelper`.`accounts`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `socialhelper`.`accounts` (
  `accountID` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '',
  `UID` VARCHAR(45) NOT NULL COMMENT '',
  `accountTypeID` INT UNSIGNED NOT NULL COMMENT '',
  `dateAdded` DATETIME NOT NULL COMMENT '',
  `dateUpdated` DATETIME NOT NULL COMMENT '',
  PRIMARY KEY (`accountID`)  COMMENT '',
  UNIQUE INDEX `accountID_UNIQUE` (`accountID` ASC)  COMMENT '',
  UNIQUE INDEX `UIDaccountTypeID` (`UID` ASC, `accountTypeID` ASC)  COMMENT '',
  INDEX `accountsAccountTypeID_idx` (`accountTypeID` ASC)  COMMENT '',
  CONSTRAINT `accountsAccountTypeID`
    FOREIGN KEY (`accountTypeID`)
    REFERENCES `socialhelper`.`accountTypes` (`accountTypeID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `socialhelper`.`accountMetricsRatings`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `socialhelper`.`accountMetricsRatings` (
  `accountMetricRatingID` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '',
  `metricID` INT UNSIGNED NOT NULL COMMENT '',
  `accountID` INT UNSIGNED NOT NULL COMMENT '',
  `rating` FLOAT NOT NULL COMMENT '',
  `dateAdded` DATETIME NOT NULL COMMENT '',
  `dateUpdated` DATETIME NOT NULL COMMENT '',
  PRIMARY KEY (`accountMetricRatingID`)  COMMENT '',
  UNIQUE INDEX `accountMetricsRatingsID_UNIQUE` (`accountMetricRatingID` ASC)  COMMENT '',
  UNIQUE INDEX `metricIDaccountID` (`metricID` ASC, `accountID` ASC)  COMMENT '',
  INDEX `accountMetricsRatingsAccountID_idx` (`accountID` ASC)  COMMENT '',
  CONSTRAINT `accountMetricsRatingsMetricID`
    FOREIGN KEY (`metricID`)
    REFERENCES `socialhelper`.`metrics` (`metricID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `accountMetricsRatingsAccountID`
    FOREIGN KEY (`accountID`)
    REFERENCES `socialhelper`.`accounts` (`accountID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `socialhelper`.`accountKeywordRatings`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `socialhelper`.`accountKeywordRatings` (
  `accountKeywordRatingsID` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '',
  `accountID` INT UNSIGNED NOT NULL COMMENT '',
  `keywordID` INT UNSIGNED NOT NULL COMMENT '',
  `rating` FLOAT NOT NULL COMMENT '',
  `blacklist` TINYINT(1) NOT NULL DEFAULT 0 COMMENT '',
  `dateAdded` DATETIME NOT NULL COMMENT '',
  `dateUpdated` DATETIME NOT NULL COMMENT '',
  PRIMARY KEY (`accountKeywordRatingsID`)  COMMENT '',
  UNIQUE INDEX `accountKeywordRatingsID_UNIQUE` (`accountKeywordRatingsID` ASC)  COMMENT '',
  UNIQUE INDEX `accountIDkeywordID` (`accountID` ASC, `keywordID` ASC)  COMMENT '',
  INDEX `accountKeywordRatingsKeywordID_idx` (`keywordID` ASC)  COMMENT '',
  CONSTRAINT `accountKeywordRatingsKeywordID`
    FOREIGN KEY (`keywordID`)
    REFERENCES `socialhelper`.`keywords` (`keywordID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `accountKeywordRatingsAccountID`
    FOREIGN KEY (`accountID`)
    REFERENCES `socialhelper`.`accounts` (`accountID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `socialhelper`.`actions`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `socialhelper`.`actions` (
  `actionsID` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '',
  `type` VARCHAR(45) NOT NULL COMMENT '',
  `dateAdded` DATETIME NOT NULL COMMENT '',
  `dateUpdated` DATETIME NOT NULL COMMENT '',
  PRIMARY KEY (`actionsID`)  COMMENT '',
  UNIQUE INDEX `type_UNIQUE` (`type` ASC)  COMMENT '',
  UNIQUE INDEX `actionsID_UNIQUE` (`actionsID` ASC)  COMMENT '')
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `socialhelper`.`objectAccountActions`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `socialhelper`.`objectAccountActions` (
  `objectAccountActionsID` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '',
  `objectID` INT UNSIGNED NOT NULL COMMENT '',
  `accountID` INT UNSIGNED NOT NULL COMMENT '',
  `actionID` INT UNSIGNED NOT NULL COMMENT '',
  `dateAdded` DATETIME NOT NULL COMMENT '',
  `dateUpdated` DATETIME NOT NULL COMMENT '',
  PRIMARY KEY (`objectAccountActionsID`)  COMMENT '',
  UNIQUE INDEX `objectAccountActionsID_UNIQUE` (`objectAccountActionsID` ASC)  COMMENT '',
  UNIQUE INDEX `objectIDaccountIDactionID` (`objectID` ASC, `accountID` ASC, `actionID` ASC)  COMMENT '',
  INDEX `objectAccountActionsAccountID_idx` (`accountID` ASC)  COMMENT '',
  INDEX `objectAccountActionsActionID_idx` (`actionID` ASC)  COMMENT '',
  CONSTRAINT `objectAccountActionsObjectID`
    FOREIGN KEY (`objectID`)
    REFERENCES `socialhelper`.`objects` (`objectID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `objectAccountActionsAccountID`
    FOREIGN KEY (`accountID`)
    REFERENCES `socialhelper`.`accounts` (`accountID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `objectAccountActionsActionID`
    FOREIGN KEY (`actionID`)
    REFERENCES `socialhelper`.`actions` (`actionsID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `socialhelper`.`accountMeta`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `socialhelper`.`accountMeta` (
  `accountMetaID` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '',
  `accountID` INT UNSIGNED NOT NULL COMMENT '',
  `metaKey` VARCHAR(45) NOT NULL COMMENT '',
  `metaValue` VARCHAR(45) NULL COMMENT '',
  `dateAdded` DATETIME NOT NULL COMMENT '',
  `dateUpdated` DATETIME NOT NULL COMMENT '',
  PRIMARY KEY (`accountMetaID`)  COMMENT '',
  UNIQUE INDEX `accountMetaID_UNIQUE` (`accountMetaID` ASC)  COMMENT '',
  UNIQUE INDEX `accountIDmetaKeyMetaValue` (`accountID` ASC, `metaKey` ASC, `metaValue` ASC)  COMMENT '',
  CONSTRAINT `accountMetaAccountID`
    FOREIGN KEY (`accountID`)
    REFERENCES `socialhelper`.`accounts` (`accountID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `socialhelper`.`users`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `socialhelper`.`users` (
  `userID` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '',
  `primaryEmail` VARCHAR(45) NOT NULL COMMENT '',
  `password` VARCHAR(45) NOT NULL COMMENT '',
  `dateAdded` DATETIME NOT NULL COMMENT '',
  `dateUpdated` DATETIME NOT NULL COMMENT '',
  PRIMARY KEY (`userID`)  COMMENT '',
  UNIQUE INDEX `userID_UNIQUE` (`userID` ASC)  COMMENT '',
  UNIQUE INDEX `email_UNIQUE` (`primaryEmail` ASC)  COMMENT '')
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `socialhelper`.`userAccounts`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `socialhelper`.`userAccounts` (
  `userAccountID` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '',
  `accountID` INT UNSIGNED NOT NULL COMMENT '',
  `userID` INT UNSIGNED NOT NULL COMMENT '',
  `dateAdded` DATETIME NOT NULL COMMENT '',
  `dateUpdated` DATETIME NOT NULL COMMENT '',
  `preferences` FLOAT NOT NULL COMMENT '',
  PRIMARY KEY (`userAccountID`)  COMMENT '',
  UNIQUE INDEX `userAccountID_UNIQUE` (`userAccountID` ASC)  COMMENT '',
  UNIQUE INDEX `accountIDuserID` (`accountID` ASC, `userID` ASC)  COMMENT '',
  INDEX `userAccountsUserID_idx` (`userID` ASC)  COMMENT '',
  CONSTRAINT `userAccountsAccountID`
    FOREIGN KEY (`accountID`)
    REFERENCES `socialhelper`.`accounts` (`accountID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `userAccountsUserID`
    FOREIGN KEY (`userID`)
    REFERENCES `socialhelper`.`users` (`userID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `socialhelper`.`trackingTypes`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `socialhelper`.`trackingTypes` (
  `trackingTypeID` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '',
  `type` VARCHAR(45) NOT NULL COMMENT '',
  `dateAdded` DATETIME NOT NULL COMMENT '',
  `dateUpdated` DATETIME NOT NULL COMMENT '',
  PRIMARY KEY (`trackingTypeID`)  COMMENT '',
  UNIQUE INDEX `trackingTagsID_UNIQUE` (`trackingTypeID` ASC)  COMMENT '',
  UNIQUE INDEX `tag_UNIQUE` (`type` ASC)  COMMENT '')
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `socialhelper`.`trackingQueries`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `socialhelper`.`trackingQueries` (
  `trackingQueryID` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '',
  `trackingTypeID` INT UNSIGNED NOT NULL COMMENT '',
  `query` VARCHAR(45) NOT NULL COMMENT '',
  `dateAdded` DATETIME NULL COMMENT '',
  `dateUpdated` DATETIME NOT NULL COMMENT '',
  PRIMARY KEY (`trackingQueryID`)  COMMENT '',
  UNIQUE INDEX `query_UNIQUE` (`query` ASC)  COMMENT '',
  UNIQUE INDEX `trackingQueryID_UNIQUE` (`trackingQueryID` ASC)  COMMENT '',
  INDEX `trackingQueriesTrackingTypeID_idx` (`trackingTypeID` ASC)  COMMENT '',
  CONSTRAINT `trackingQueriesTrackingTypeID`
    FOREIGN KEY (`trackingTypeID`)
    REFERENCES `socialhelper`.`trackingTypes` (`trackingTypeID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `socialhelper`.`accountTrackingQuery`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `socialhelper`.`accountTrackingQuery` (
  `accountTrackingTagsID` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '',
  `accountID` INT UNSIGNED NOT NULL COMMENT '',
  `trackingQueryID` INT UNSIGNED NOT NULL COMMENT '',
  `dateAdded` DATETIME NOT NULL COMMENT '',
  `dateUpdated` DATETIME NOT NULL COMMENT '',
  PRIMARY KEY (`accountTrackingTagsID`)  COMMENT '',
  UNIQUE INDEX `accountTrackingTagsID_UNIQUE` (`accountTrackingTagsID` ASC)  COMMENT '',
  UNIQUE INDEX `accountIDtrackingQueryID` (`accountID` ASC, `trackingQueryID` ASC)  COMMENT '',
  INDEX `accountTrackingQueryTrackingQueryID_idx` (`trackingQueryID` ASC)  COMMENT '',
  CONSTRAINT `accountTrackingTagsAccountID`
    FOREIGN KEY (`accountID`)
    REFERENCES `socialhelper`.`accounts` (`accountID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `accountTrackingQueryTrackingQueryID`
    FOREIGN KEY (`trackingQueryID`)
    REFERENCES `socialhelper`.`trackingQueries` (`trackingQueryID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `socialhelper`.`objectAccountActionMeta`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `socialhelper`.`objectAccountActionMeta` (
  `objectAccountActionMetaID` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'For checking how our actions are doing',
  `objectAccountActionID` INT UNSIGNED NOT NULL COMMENT '',
  `metaKey` VARCHAR(45) NOT NULL COMMENT '',
  `metaValue` VARCHAR(45) NULL COMMENT '',
  `dateAdded` DATETIME NOT NULL COMMENT '',
  `dateUpdated` DATETIME NOT NULL COMMENT '',
  PRIMARY KEY (`objectAccountActionMetaID`)  COMMENT '',
  UNIQUE INDEX `objectAccountActionMetaID_UNIQUE` (`objectAccountActionMetaID` ASC)  COMMENT '',
  UNIQUE INDEX `objectAccountActionMetaKeyMetaValue` (`objectAccountActionID` ASC, `metaKey` ASC, `metaValue` ASC)  COMMENT '',
  CONSTRAINT `objectAccountActionMetaObjectAccountActionsID`
    FOREIGN KEY (`objectAccountActionID`)
    REFERENCES `socialhelper`.`objectAccountActions` (`objectAccountActionsID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `socialhelper`.`userMeta`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `socialhelper`.`userMeta` (
  `userMetaID` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '',
  `userID` INT UNSIGNED NOT NULL COMMENT '',
  `metaKey` VARCHAR(45) NOT NULL COMMENT '',
  `metaValue` VARCHAR(45) NULL COMMENT '',
  `dateAdded` DATETIME NOT NULL COMMENT '',
  `dateUpdated` DATETIME NOT NULL COMMENT '',
  PRIMARY KEY (`userMetaID`)  COMMENT '',
  UNIQUE INDEX `userMetaID_UNIQUE` (`userMetaID` ASC)  COMMENT '',
  UNIQUE INDEX `userIDmetaKeyMetaValue` (`userID` ASC, `metaKey` ASC, `metaValue` ASC)  COMMENT '',
  CONSTRAINT `userMetaUserID`
    FOREIGN KEY (`userID`)
    REFERENCES `socialhelper`.`users` (`userID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `socialhelper`.`objectTrackingQuery`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `socialhelper`.`objectTrackingQuery` (
  `objectAccountTrackingQueryID` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '',
  `objectID` INT UNSIGNED NOT NULL COMMENT '',
  `trackingQueryID` INT UNSIGNED NOT NULL COMMENT '',
  `dateAdded` DATETIME NOT NULL COMMENT '',
  `dateUpdated` DATETIME NOT NULL COMMENT '',
  PRIMARY KEY (`objectAccountTrackingQueryID`)  COMMENT '',
  UNIQUE INDEX `objectAccountTrackingQueryID_UNIQUE` (`objectAccountTrackingQueryID` ASC)  COMMENT '',
  UNIQUE INDEX `objectIDaccountTrackingQueryID` (`objectID` ASC, `trackingQueryID` ASC)  COMMENT '',
  INDEX `objectTrackingQueryAccountTrackingQueryID_idx` (`trackingQueryID` ASC)  COMMENT '',
  CONSTRAINT `objectTrackingQueryObjectID`
    FOREIGN KEY (`objectID`)
    REFERENCES `socialhelper`.`objects` (`objectID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `objectTrackingQueryAccountTrackingQueryID`
    FOREIGN KEY (`trackingQueryID`)
    REFERENCES `socialhelper`.`trackingQueries` (`trackingQueryID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `socialhelper`.`accountAItests`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `socialhelper`.`accountAItests` (
  `accountAItestID` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '',
  `accountID` INT UNSIGNED NOT NULL COMMENT '',
  `performance` FLOAT UNSIGNED NOT NULL COMMENT '',
  `dateAdded` DATETIME NOT NULL COMMENT '',
  `dateUpdated` DATETIME NOT NULL COMMENT '',
  PRIMARY KEY (`accountAItestID`)  COMMENT '',
  UNIQUE INDEX `accountAItestsID_UNIQUE` (`accountAItestID` ASC)  COMMENT '',
  INDEX `accountAItestsAccountID_idx` (`accountID` ASC)  COMMENT '',
  CONSTRAINT `accountAItestsAccountID`
    FOREIGN KEY (`accountID`)
    REFERENCES `socialhelper`.`accounts` (`accountID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `socialhelper`.`accountAItestMeta`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `socialhelper`.`accountAItestMeta` (
  `accountAItestMetaID` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '',
  `accountAItestID` INT UNSIGNED NOT NULL COMMENT '',
  `metaKey` VARCHAR(45) NOT NULL COMMENT '',
  `metaValue` VARCHAR(45) NULL COMMENT '',
  `dateAdded` DATETIME NOT NULL COMMENT '',
  `dateUpdated` DATETIME NOT NULL COMMENT '',
  PRIMARY KEY (`accountAItestMetaID`)  COMMENT '',
  UNIQUE INDEX `accountAItestMetaID_UNIQUE` (`accountAItestMetaID` ASC)  COMMENT '',
  UNIQUE INDEX `accountAItestIDmetaKey` (`accountAItestID` ASC, `metaKey` ASC)  COMMENT '',
  CONSTRAINT `accountAItestMetaAccountAItestID`
    FOREIGN KEY (`accountAItestID`)
    REFERENCES `socialhelper`.`accountAItests` (`accountAItestID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `socialhelper`.`accountObjectRatings`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `socialhelper`.`accountObjectRatings` (
  `accountObjectRatingsID` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '',
  `accountID` INT UNSIGNED NOT NULL COMMENT '',
  `objectID` INT UNSIGNED NOT NULL COMMENT '',
  `rating` FLOAT NOT NULL COMMENT '',
  `dateAdded` DATETIME NOT NULL COMMENT '',
  `dateUpdated` DATETIME NOT NULL COMMENT '',
  PRIMARY KEY (`accountObjectRatingsID`)  COMMENT '',
  UNIQUE INDEX `accountObjectRatingsID_UNIQUE` (`accountObjectRatingsID` ASC)  COMMENT '',
  UNIQUE INDEX `accountIDObjectID` (`accountID` ASC, `objectID` ASC)  COMMENT '',
  INDEX `accountObjectRatingsObjectID_idx` (`objectID` ASC)  COMMENT '',
  INDEX `rating` (`rating` ASC)  COMMENT '',
  CONSTRAINT `accountObjectRatingsAccountID`
    FOREIGN KEY (`accountID`)
    REFERENCES `socialhelper`.`accounts` (`accountID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `accountObjectRatingsObjectID`
    FOREIGN KEY (`objectID`)
    REFERENCES `socialhelper`.`objects` (`objectID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `socialhelper`.`accountObjectMeta`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `socialhelper`.`accountObjectMeta` (
  `accountObjectMetaID` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Store which lists the object should be in',
  `accountID` INT UNSIGNED NOT NULL COMMENT '',
  `objectID` INT UNSIGNED NOT NULL COMMENT '',
  `metaKey` VARCHAR(45) NOT NULL COMMENT '',
  `metaValue` VARCHAR(45) NULL COMMENT '',
  `dateAdded` DATETIME NOT NULL COMMENT '',
  `dateUpdated` DATETIME NOT NULL COMMENT '',
  PRIMARY KEY (`accountObjectMetaID`)  COMMENT '',
  UNIQUE INDEX `accountObjectMetaID_UNIQUE` (`accountObjectMetaID` ASC)  COMMENT '',
  UNIQUE INDEX `accountIDobjectID` (`accountID` ASC, `objectID` ASC)  COMMENT '',
  INDEX `accountObjectMetaObjectID_idx` (`objectID` ASC)  COMMENT '',
  CONSTRAINT `accountObjectMetaAccountID`
    FOREIGN KEY (`accountID`)
    REFERENCES `socialhelper`.`accounts` (`accountID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `accountObjectMetaObjectID`
    FOREIGN KEY (`objectID`)
    REFERENCES `socialhelper`.`objects` (`objectID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `socialhelper`.`trackingQueryMeta`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `socialhelper`.`trackingQueryMeta` (
  `trackingQueryMetaID` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '',
  `trackingQueryID` INT UNSIGNED NOT NULL COMMENT '',
  `metaKey` VARCHAR(45) NOT NULL COMMENT '',
  `metaValue` VARCHAR(45) NULL COMMENT '',
  `dateAdded` DATETIME NOT NULL COMMENT '',
  `dateUpdated` DATETIME NOT NULL COMMENT '',
  PRIMARY KEY (`trackingQueryMetaID`)  COMMENT '',
  UNIQUE INDEX `trackingQueryMetaID_UNIQUE` (`trackingQueryMetaID` ASC)  COMMENT '',
  UNIQUE INDEX `trackingQueryIDmetaKey` (`trackingQueryID` ASC, `metaKey` ASC)  COMMENT '',
  CONSTRAINT `trackingQueryMetaTrackingQueryID`
    FOREIGN KEY (`trackingQueryID`)
    REFERENCES `socialhelper`.`trackingQueries` (`trackingQueryID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `socialhelper`.`referenceTypes`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `socialhelper`.`referenceTypes` (
  `referenceTypeID` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '',
  `type` VARCHAR(45) NOT NULL COMMENT '',
  `dateAdded` DATETIME NOT NULL COMMENT '',
  `dateUpdated` DATETIME NOT NULL COMMENT '',
  PRIMARY KEY (`referenceTypeID`)  COMMENT '',
  UNIQUE INDEX `referenceTypeID_UNIQUE` (`referenceTypeID` ASC)  COMMENT '',
  UNIQUE INDEX `type` (`type` ASC)  COMMENT '')
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `socialhelper`.`objectReferences`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `socialhelper`.`objectReferences` (
  `objectReferenceID` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '',
  `objectID` INT UNSIGNED NOT NULL COMMENT '',
  `referenceID` INT UNSIGNED NOT NULL COMMENT '',
  `referenceType` INT UNSIGNED NOT NULL COMMENT '',
  `dateAdded` DATETIME NOT NULL COMMENT '',
  `dateUpdated` DATETIME NOT NULL COMMENT '',
  PRIMARY KEY (`objectReferenceID`)  COMMENT '',
  UNIQUE INDEX `objectReferenceID_UNIQUE` (`objectReferenceID` ASC)  COMMENT '',
  UNIQUE INDEX `objectIDreferenceIDTypeID` (`objectID` ASC, `referenceID` ASC, `referenceType` ASC)  COMMENT '',
  INDEX `objectReferencesReferenceTypeID_idx` (`referenceID` ASC)  COMMENT '',
  CONSTRAINT `objectReferencesObjectID`
    FOREIGN KEY (`objectID`)
    REFERENCES `socialhelper`.`objects` (`objectID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `objectReferencesReferenceTypeID`
    FOREIGN KEY (`referenceID`)
    REFERENCES `socialhelper`.`referenceTypes` (`referenceTypeID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

USE `socialhelper` ;

-- -----------------------------------------------------
-- Placeholder table for view `socialhelper`.`accountObjects`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `socialhelper`.`accountObjects` (`objectID` INT, `accountID` INT, `dateAdded` INT, `dateUpdated` INT, `rating` INT, `objectList` INT);

-- -----------------------------------------------------
-- Placeholder table for view `socialhelper`.`trackingQueriesView`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `socialhelper`.`trackingQueriesView` (`ID` INT, `query` INT, `type` INT);

-- -----------------------------------------------------
-- View `socialhelper`.`accountObjects`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `socialhelper`.`accountObjects`;
USE `socialhelper`;
CREATE  OR REPLACE VIEW `accountObjects` AS
    SELECT 
        objects.objectID,
        accounts.accountID,
        objects.dateAdded,
        objects.dateUpdated,
        accountObjectRatings.rating,
        accountObjectMeta.metaValue AS objectList
    FROM
        objects
            LEFT JOIN
        accountObjectMeta ON objects.objectID = accountObjectMeta.objectID
            LEFT JOIN
        accountObjectRatings ON objects.objectID = accountObjectRatings.objectID
            INNER JOIN
        accounts ON accountObjectRatings.accountID = accounts.accountID
            LEFT JOIN
        objectAccountActions ON objectAccountActions.objectID = objects.objectID
    WHERE
        accountObjectMeta.metaKey = 'objectList'
            AND objectAccountActions.objectID IS NULL
    GROUP BY objects.objectID;

-- -----------------------------------------------------
-- View `socialhelper`.`trackingQueriesView`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `socialhelper`.`trackingQueriesView`;
USE `socialhelper`;
CREATE  OR REPLACE VIEW `trackingQueriesView` AS
    SELECT 
        trackingQueries.trackingQueryID AS ID,
        trackingQueries.query,
        trackingTypes.type
    FROM
        trackingQueries
            INNER JOIN
        trackingTypes ON trackingQueries.trackingTypeID = trackingTypes.trackingTypeID;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
