-- MySQL Script generated by MySQL Workbench
-- 06/07/16 13:21:04
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema socialhelper
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema socialhelper
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `socialhelper` DEFAULT CHARACTER SET utf8 ;
USE `socialhelper` ;

-- -----------------------------------------------------
-- Table `socialhelper`.`objectTypes`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `socialhelper`.`objectTypes` (
  `objectTypesID` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `type` VARCHAR(45) NOT NULL,
  `dateAdded` DATETIME NOT NULL,
  `dateUpdated` DATETIME NOT NULL,
  PRIMARY KEY (`objectTypesID`),
  UNIQUE INDEX `objectTypesID_UNIQUE` (`objectTypesID` ASC),
  UNIQUE INDEX `type_UNIQUE` (`type` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `socialhelper`.`objects`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `socialhelper`.`objects` (
  `objectID` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `UID` VARCHAR(45) NOT NULL,
  `objectTypeID` INT UNSIGNED NOT NULL,
  `dateAdded` DATETIME NOT NULL,
  `dateUpdated` DATETIME NOT NULL,
  PRIMARY KEY (`objectID`),
  UNIQUE INDEX `UID_UNIQUE` (`UID` ASC),
  UNIQUE INDEX `objectID_UNIQUE` (`objectID` ASC),
  INDEX `objectsObjectTypesID_idx` (`objectTypeID` ASC),
  CONSTRAINT `objectsObjectTypesID`
    FOREIGN KEY (`objectTypeID`)
    REFERENCES `socialhelper`.`objectTypes` (`objectTypesID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `socialhelper`.`objectMeta`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `socialhelper`.`objectMeta` (
  `objectMetaID` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `metaKey` VARCHAR(45) NOT NULL,
  `metaValue` VARCHAR(45) NULL,
  `objectID` INT UNSIGNED NOT NULL,
  `dateAdded` DATETIME NOT NULL,
  `dateUpdated` DATETIME NOT NULL,
  PRIMARY KEY (`objectMetaID`),
  UNIQUE INDEX `keyValueID` (`metaKey` ASC, `metaValue` ASC, `objectID` ASC),
  INDEX `fk_objectMeta_objects_idx` (`objectID` ASC),
  UNIQUE INDEX `objectMetaID_UNIQUE` (`objectMetaID` ASC),
  CONSTRAINT `objectMetaObjectID`
    FOREIGN KEY (`objectID`)
    REFERENCES `socialhelper`.`objects` (`objectID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `socialhelper`.`keywordTypes`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `socialhelper`.`keywordTypes` (
  `keywordTypesID` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `type` VARCHAR(45) NOT NULL,
  `dateAdded` DATETIME NOT NULL,
  `dateUpdated` DATETIME NOT NULL,
  PRIMARY KEY (`keywordTypesID`),
  UNIQUE INDEX `keywordTypesID_UNIQUE` (`keywordTypesID` ASC),
  UNIQUE INDEX `type_UNIQUE` (`type` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `socialhelper`.`keywords`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `socialhelper`.`keywords` (
  `keywordID` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `keywordTypeID` INT UNSIGNED NOT NULL,
  `keyword` VARCHAR(45) NOT NULL,
  `dateAdded` DATETIME NOT NULL,
  `dateUpdated` DATETIME NOT NULL,
  PRIMARY KEY (`keywordID`),
  UNIQUE INDEX `keywordID_UNIQUE` (`keywordID` ASC),
  UNIQUE INDEX `keywordTypeIDkeyword` (`keywordTypeID` ASC, `keyword` ASC),
  CONSTRAINT `keywordsKeywordTypeID`
    FOREIGN KEY (`keywordTypeID`)
    REFERENCES `socialhelper`.`keywordTypes` (`keywordTypesID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `socialhelper`.`objectKeywords`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `socialhelper`.`objectKeywords` (
  `objectKeywordID` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `objectID` INT UNSIGNED NOT NULL,
  `keywordID` INT UNSIGNED NOT NULL,
  `dateAdded` DATETIME NOT NULL,
  `dateUpdated` DATETIME NOT NULL,
  PRIMARY KEY (`objectKeywordID`),
  UNIQUE INDEX `objectIDkeywordID` (`objectID` ASC, `keywordID` ASC),
  UNIQUE INDEX `objectKeywordID_UNIQUE` (`objectKeywordID` ASC),
  INDEX `objectKeywordsKeywordID_idx` (`keywordID` ASC),
  CONSTRAINT `objectKeywordsObjectID`
    FOREIGN KEY (`objectID`)
    REFERENCES `socialhelper`.`objects` (`objectID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `objectKeywordsKeywordID`
    FOREIGN KEY (`keywordID`)
    REFERENCES `socialhelper`.`keywords` (`keywordID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `socialhelper`.`metrics`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `socialhelper`.`metrics` (
  `metricID` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `type` VARCHAR(45) NOT NULL,
  `dateAdded` DATETIME NOT NULL,
  `dateUpdated` DATETIME NOT NULL,
  PRIMARY KEY (`metricID`),
  UNIQUE INDEX `metricID_UNIQUE` (`metricID` ASC),
  UNIQUE INDEX `type_UNIQUE` (`type` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `socialhelper`.`objectMetrics`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `socialhelper`.`objectMetrics` (
  `objectMetricID` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `objectID` INT UNSIGNED NOT NULL,
  `metricID` INT UNSIGNED NOT NULL,
  `value` BIGINT(64) UNSIGNED NOT NULL,
  `dateAdded` DATETIME NOT NULL,
  `dateUpdated` DATETIME NOT NULL,
  PRIMARY KEY (`objectMetricID`),
  UNIQUE INDEX `objectIDmetricID` (`objectID` ASC, `metricID` ASC),
  UNIQUE INDEX `objectMetricID_UNIQUE` (`objectMetricID` ASC),
  INDEX `metricsMetricID_idx` (`metricID` ASC),
  CONSTRAINT `objectMetricsObjectID`
    FOREIGN KEY (`objectID`)
    REFERENCES `socialhelper`.`objects` (`objectID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `metricsMetricID`
    FOREIGN KEY (`metricID`)
    REFERENCES `socialhelper`.`metrics` (`metricID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `socialhelper`.`accountTypes`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `socialhelper`.`accountTypes` (
  `accountTypeID` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `type` VARCHAR(45) NOT NULL,
  `dateAdded` DATETIME NOT NULL,
  `dateUpdated` DATETIME NOT NULL,
  PRIMARY KEY (`accountTypeID`),
  UNIQUE INDEX `accountTypeID_UNIQUE` (`accountTypeID` ASC),
  UNIQUE INDEX `type_UNIQUE` (`type` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `socialhelper`.`accounts`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `socialhelper`.`accounts` (
  `accountID` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `UID` VARCHAR(45) NOT NULL,
  `accountTypeID` INT UNSIGNED NOT NULL,
  `dateAdded` DATETIME NOT NULL,
  `dateUpdated` DATETIME NOT NULL,
  PRIMARY KEY (`accountID`),
  UNIQUE INDEX `accountID_UNIQUE` (`accountID` ASC),
  UNIQUE INDEX `UIDaccountTypeID` (`UID` ASC, `accountTypeID` ASC),
  INDEX `accountsAccountTypeID_idx` (`accountTypeID` ASC),
  CONSTRAINT `accountsAccountTypeID`
    FOREIGN KEY (`accountTypeID`)
    REFERENCES `socialhelper`.`accountTypes` (`accountTypeID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `socialhelper`.`accountMetricsRatings`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `socialhelper`.`accountMetricsRatings` (
  `accountMetricRatingID` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `metricID` INT UNSIGNED NOT NULL,
  `accountID` INT UNSIGNED NOT NULL,
  `rating` FLOAT NOT NULL,
  `dateAdded` DATETIME NOT NULL,
  `dateUpdated` DATETIME NOT NULL,
  PRIMARY KEY (`accountMetricRatingID`),
  UNIQUE INDEX `accountMetricsRatingsID_UNIQUE` (`accountMetricRatingID` ASC),
  UNIQUE INDEX `metricIDaccountID` (`metricID` ASC, `accountID` ASC),
  INDEX `accountMetricsRatingsAccountID_idx` (`accountID` ASC),
  CONSTRAINT `accountMetricsRatingsMetricID`
    FOREIGN KEY (`metricID`)
    REFERENCES `socialhelper`.`metrics` (`metricID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `accountMetricsRatingsAccountID`
    FOREIGN KEY (`accountID`)
    REFERENCES `socialhelper`.`accounts` (`accountID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `socialhelper`.`accountKeywordRatings`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `socialhelper`.`accountKeywordRatings` (
  `accountKeywordRatingsID` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `accountID` INT UNSIGNED NOT NULL,
  `keywordID` INT UNSIGNED NOT NULL,
  `rating` FLOAT NOT NULL,
  `blacklist` TINYINT(1) NOT NULL DEFAULT 0,
  `dateAdded` DATETIME NOT NULL,
  `dateUpdated` DATETIME NOT NULL,
  PRIMARY KEY (`accountKeywordRatingsID`),
  UNIQUE INDEX `accountKeywordRatingsID_UNIQUE` (`accountKeywordRatingsID` ASC),
  UNIQUE INDEX `accountIDkeywordID` (`accountID` ASC, `keywordID` ASC),
  INDEX `accountKeywordRatingsKeywordID_idx` (`keywordID` ASC),
  CONSTRAINT `accountKeywordRatingsKeywordID`
    FOREIGN KEY (`keywordID`)
    REFERENCES `socialhelper`.`keywords` (`keywordID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `accountKeywordRatingsAccountID`
    FOREIGN KEY (`accountID`)
    REFERENCES `socialhelper`.`accounts` (`accountID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `socialhelper`.`actions`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `socialhelper`.`actions` (
  `actionsID` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `type` VARCHAR(45) NOT NULL,
  `dateAdded` DATETIME NOT NULL,
  `dateUpdated` DATETIME NOT NULL,
  PRIMARY KEY (`actionsID`),
  UNIQUE INDEX `type_UNIQUE` (`type` ASC),
  UNIQUE INDEX `actionsID_UNIQUE` (`actionsID` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `socialhelper`.`objectAccountActions`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `socialhelper`.`objectAccountActions` (
  `objectAccountActionsID` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `objectID` INT UNSIGNED NOT NULL,
  `accountID` INT UNSIGNED NOT NULL,
  `actionID` INT UNSIGNED NOT NULL,
  `dateAdded` DATETIME NOT NULL,
  `dateUpdated` DATETIME NOT NULL,
  PRIMARY KEY (`objectAccountActionsID`),
  UNIQUE INDEX `objectAccountActionsID_UNIQUE` (`objectAccountActionsID` ASC),
  UNIQUE INDEX `objectIDaccountIDactionID` (`objectID` ASC, `accountID` ASC, `actionID` ASC),
  INDEX `objectAccountActionsAccountID_idx` (`accountID` ASC),
  INDEX `objectAccountActionsActionID_idx` (`actionID` ASC),
  CONSTRAINT `objectAccountActionsObjectID`
    FOREIGN KEY (`objectID`)
    REFERENCES `socialhelper`.`objects` (`objectID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `objectAccountActionsAccountID`
    FOREIGN KEY (`accountID`)
    REFERENCES `socialhelper`.`accounts` (`accountID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `objectAccountActionsActionID`
    FOREIGN KEY (`actionID`)
    REFERENCES `socialhelper`.`actions` (`actionsID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `socialhelper`.`accountMeta`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `socialhelper`.`accountMeta` (
  `accountMetaID` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `accountID` INT UNSIGNED NOT NULL,
  `metaKey` VARCHAR(45) NOT NULL,
  `metaValue` VARCHAR(45) NULL,
  `dateAdded` DATETIME NOT NULL,
  `dateUpdated` DATETIME NOT NULL,
  PRIMARY KEY (`accountMetaID`),
  UNIQUE INDEX `accountMetaID_UNIQUE` (`accountMetaID` ASC),
  UNIQUE INDEX `accountIDmetaKeyMetaValue` (`accountID` ASC, `metaKey` ASC, `metaValue` ASC),
  CONSTRAINT `accountMetaAccountID`
    FOREIGN KEY (`accountID`)
    REFERENCES `socialhelper`.`accounts` (`accountID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `socialhelper`.`users`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `socialhelper`.`users` (
  `userID` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `primaryEmail` VARCHAR(45) NOT NULL,
  `password` VARCHAR(45) NOT NULL,
  `dateAdded` DATETIME NOT NULL,
  `dateUpdated` DATETIME NOT NULL,
  PRIMARY KEY (`userID`),
  UNIQUE INDEX `userID_UNIQUE` (`userID` ASC),
  UNIQUE INDEX `email_UNIQUE` (`primaryEmail` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `socialhelper`.`userAccounts`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `socialhelper`.`userAccounts` (
  `userAccountID` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `accountID` INT UNSIGNED NOT NULL,
  `userID` INT UNSIGNED NOT NULL,
  `dateAdded` DATETIME NOT NULL,
  `dateUpdated` DATETIME NOT NULL,
  `preferences` FLOAT NOT NULL,
  PRIMARY KEY (`userAccountID`),
  UNIQUE INDEX `userAccountID_UNIQUE` (`userAccountID` ASC),
  UNIQUE INDEX `accountIDuserID` (`accountID` ASC, `userID` ASC),
  INDEX `userAccountsUserID_idx` (`userID` ASC),
  CONSTRAINT `userAccountsAccountID`
    FOREIGN KEY (`accountID`)
    REFERENCES `socialhelper`.`accounts` (`accountID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `userAccountsUserID`
    FOREIGN KEY (`userID`)
    REFERENCES `socialhelper`.`users` (`userID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `socialhelper`.`trackingTypes`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `socialhelper`.`trackingTypes` (
  `trackingTagsID` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `type` VARCHAR(45) NOT NULL,
  `dateAdded` DATETIME NOT NULL,
  `dateUpdated` DATETIME NOT NULL,
  PRIMARY KEY (`trackingTagsID`),
  UNIQUE INDEX `trackingTagsID_UNIQUE` (`trackingTagsID` ASC),
  UNIQUE INDEX `tag_UNIQUE` (`type` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `socialhelper`.`trackingQueries`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `socialhelper`.`trackingQueries` (
  `trackingQueryID` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `trackingTypeID` INT UNSIGNED NOT NULL,
  `query` VARCHAR(45) NOT NULL,
  `dateAdded` DATETIME NULL,
  `dateUpdated` DATETIME NOT NULL,
  `trackingQueriescol` VARCHAR(45) NULL,
  `trackingQueriescol1` TIMESTAMP(64) NULL,
  `trackingQueriescol2` VARCHAR(45) NULL,
  PRIMARY KEY (`trackingQueryID`),
  UNIQUE INDEX `query_UNIQUE` (`query` ASC),
  UNIQUE INDEX `trackingQueryID_UNIQUE` (`trackingQueryID` ASC),
  INDEX `trackingQueriesTrackingTypeID_idx` (`trackingTypeID` ASC),
  CONSTRAINT `trackingQueriesTrackingTypeID`
    FOREIGN KEY (`trackingTypeID`)
    REFERENCES `socialhelper`.`trackingTypes` (`trackingTagsID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `socialhelper`.`accountTrackingQuery`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `socialhelper`.`accountTrackingQuery` (
  `accountTrackingTagsID` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `accountID` INT UNSIGNED NOT NULL,
  `trackingQueryID` INT UNSIGNED NOT NULL,
  `dateAdded` DATETIME NOT NULL,
  `dateUpdated` DATETIME NOT NULL,
  PRIMARY KEY (`accountTrackingTagsID`),
  UNIQUE INDEX `accountTrackingTagsID_UNIQUE` (`accountTrackingTagsID` ASC),
  UNIQUE INDEX `accountIDtrackingQueryID` (`accountID` ASC, `trackingQueryID` ASC),
  INDEX `accountTrackingQueryTrackingQueryID_idx` (`trackingQueryID` ASC),
  CONSTRAINT `accountTrackingTagsAccountID`
    FOREIGN KEY (`accountID`)
    REFERENCES `socialhelper`.`accounts` (`accountID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `accountTrackingQueryTrackingQueryID`
    FOREIGN KEY (`trackingQueryID`)
    REFERENCES `socialhelper`.`trackingQueries` (`trackingQueryID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `socialhelper`.`objectAccountActionMeta`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `socialhelper`.`objectAccountActionMeta` (
  `objectAccountActionMetaID` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'For checking how our actions are doing',
  `objectAccountActionID` INT UNSIGNED NOT NULL,
  `metaKey` VARCHAR(45) NOT NULL,
  `metaValue` VARCHAR(45) NULL,
  `dateAdded` DATETIME NOT NULL,
  `dateUpdated` DATETIME NOT NULL,
  PRIMARY KEY (`objectAccountActionMetaID`),
  UNIQUE INDEX `objectAccountActionMetaID_UNIQUE` (`objectAccountActionMetaID` ASC),
  UNIQUE INDEX `objectAccountActionMetaKeyMetaValue` (`objectAccountActionID` ASC, `metaKey` ASC, `metaValue` ASC),
  CONSTRAINT `objectAccountActionMetaObjectAccountActionsID`
    FOREIGN KEY (`objectAccountActionID`)
    REFERENCES `socialhelper`.`objectAccountActions` (`objectAccountActionsID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `socialhelper`.`userMeta`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `socialhelper`.`userMeta` (
  `userMetaID` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `userID` INT UNSIGNED NOT NULL,
  `metaKey` VARCHAR(45) NOT NULL,
  `metaValue` VARCHAR(45) NULL,
  `dateAdded` DATETIME NOT NULL,
  `dateUpdated` DATETIME NOT NULL,
  PRIMARY KEY (`userMetaID`),
  UNIQUE INDEX `userMetaID_UNIQUE` (`userMetaID` ASC),
  UNIQUE INDEX `userIDmetaKeyMetaValue` (`userID` ASC, `metaKey` ASC, `metaValue` ASC),
  CONSTRAINT `userMetaUserID`
    FOREIGN KEY (`userID`)
    REFERENCES `socialhelper`.`users` (`userID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `socialhelper`.`objectTrackingQuery`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `socialhelper`.`objectTrackingQuery` (
  `objectAccountTrackingQueryID` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `objectID` INT UNSIGNED NOT NULL,
  `trackingQueryID` INT UNSIGNED NOT NULL,
  `dateAdded` DATETIME NOT NULL,
  `dateUpdated` DATETIME NOT NULL,
  PRIMARY KEY (`objectAccountTrackingQueryID`),
  UNIQUE INDEX `objectAccountTrackingQueryID_UNIQUE` (`objectAccountTrackingQueryID` ASC),
  UNIQUE INDEX `objectIDaccountTrackingQueryID` (`objectID` ASC, `trackingQueryID` ASC),
  CONSTRAINT `objectTrackingQueryObjectID`
    FOREIGN KEY (`objectID`)
    REFERENCES `socialhelper`.`objects` (`objectID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `objectTrackingQueryAccountTrackingQueryID`
    FOREIGN KEY ()
    REFERENCES `socialhelper`.`trackingQueries` ()
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `socialhelper`.`accountAItests`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `socialhelper`.`accountAItests` (
  `accountAItestID` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `accountID` INT UNSIGNED NOT NULL,
  `performance` FLOAT UNSIGNED NOT NULL,
  `dateAdded` DATETIME NOT NULL,
  `dateUpdated` DATETIME NOT NULL,
  PRIMARY KEY (`accountAItestID`),
  UNIQUE INDEX `accountAItestsID_UNIQUE` (`accountAItestID` ASC),
  INDEX `accountAItestsAccountID_idx` (`accountID` ASC),
  CONSTRAINT `accountAItestsAccountID`
    FOREIGN KEY (`accountID`)
    REFERENCES `socialhelper`.`accounts` (`accountID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `socialhelper`.`accountAItestMeta`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `socialhelper`.`accountAItestMeta` (
  `accountAItestMetaID` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `accountAItestID` INT UNSIGNED NOT NULL,
  `metaKey` VARCHAR(45) NOT NULL,
  `metaValue` VARCHAR(45) NULL,
  `dateAdded` DATETIME NOT NULL,
  `dateUpdated` DATETIME NOT NULL,
  PRIMARY KEY (`accountAItestMetaID`),
  UNIQUE INDEX `accountAItestMetaID_UNIQUE` (`accountAItestMetaID` ASC),
  UNIQUE INDEX `accountAItestIDmetaKey` (`accountAItestID` ASC, `metaKey` ASC),
  CONSTRAINT `accountAItestMetaAccountAItestID`
    FOREIGN KEY (`accountAItestID`)
    REFERENCES `socialhelper`.`accountAItests` (`accountAItestID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `socialhelper`.`accountObjectRatings`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `socialhelper`.`accountObjectRatings` (
  `accountObjectRatingsID` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `accountID` INT UNSIGNED NOT NULL,
  `objectID` INT UNSIGNED NOT NULL,
  `rating` FLOAT NOT NULL,
  `dateAdded` DATETIME NOT NULL,
  `dateUpdated` DATETIME NOT NULL,
  PRIMARY KEY (`accountObjectRatingsID`),
  UNIQUE INDEX `accountObjectRatingsID_UNIQUE` (`accountObjectRatingsID` ASC),
  UNIQUE INDEX `accountIDObjectID` (`accountID` ASC, `objectID` ASC),
  INDEX `accountObjectRatingsObjectID_idx` (`objectID` ASC),
  INDEX `rating` (`rating` ASC),
  CONSTRAINT `accountObjectRatingsAccountID`
    FOREIGN KEY (`accountID`)
    REFERENCES `socialhelper`.`accounts` (`accountID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `accountObjectRatingsObjectID`
    FOREIGN KEY (`objectID`)
    REFERENCES `socialhelper`.`objects` (`objectID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `socialhelper`.`accountObjectMeta`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `socialhelper`.`accountObjectMeta` (
  `accountObjectMetaID` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Store which lists the object should be in',
  `accountID` INT UNSIGNED NOT NULL,
  `objectID` INT UNSIGNED NOT NULL,
  `metaKey` VARCHAR(45) NOT NULL,
  `metaValue` VARCHAR(45) NULL,
  `dateAdded` DATETIME NOT NULL,
  `dateUpdated` DATETIME NOT NULL,
  PRIMARY KEY (`accountObjectMetaID`),
  UNIQUE INDEX `accountObjectMetaID_UNIQUE` (`accountObjectMetaID` ASC),
  UNIQUE INDEX `accountIDobjectID` (`accountID` ASC, `objectID` ASC),
  INDEX `accountObjectMetaObjectID_idx` (`objectID` ASC),
  CONSTRAINT `accountObjectMetaAccountID`
    FOREIGN KEY (`accountID`)
    REFERENCES `socialhelper`.`accounts` (`accountID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `accountObjectMetaObjectID`
    FOREIGN KEY (`objectID`)
    REFERENCES `socialhelper`.`objects` (`objectID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

USE `socialhelper` ;

-- -----------------------------------------------------
-- Placeholder table for view `socialhelper`.`accountObjects`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `socialhelper`.`accountObjects` (`objectID` INT, `accountID` INT, `dateAdded` INT, `dateUpdated` INT, `rating` INT, `objectList` INT);

-- -----------------------------------------------------
-- View `socialhelper`.`accountObjects`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `socialhelper`.`accountObjects`;
USE `socialhelper`;
CREATE  OR REPLACE VIEW `accountObjects` AS
    SELECT 
        objects.objectID,
        accounts.accountID,
        objects.dateAdded,
        objects.dateUpdated,
        accountObjectRatings.rating,
        accountObjectMeta.metaValue AS objectList
    FROM
        objects
            INNER JOIN
        accountObjectMeta ON objects.objectID = accountObjectMeta.objectID
            INNER JOIN
        accountObjectRatings ON objects.objectID = accountObjectRatings.objectID
            INNER JOIN
        accounts ON accountObjectRatings.accountID = accounts.accountID
            LEFT JOIN
        objectAccountActions ON objectAccountActions.objectID = objects.objectID
    WHERE
        accountObjectMeta.metaKey = 'objectList'
            AND objectAccountActions.objectsID IS NULL
    GROUP BY objects.objectID;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
